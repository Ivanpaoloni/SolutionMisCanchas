@model UsersListViewModel
@{
    ViewData["Title"] = "Listado de usuarios";
    Layout = "../shared/_layout";
}

<h1><i class="bi bi-person-fill-gear"></i> Listado de usuarios</h1>
<hr />
<a asp-action="regist" class="btn btn-success">Crear nuevo usuario</a>
<br />
<br />
@if(Model.Message is not null){

    <div class="alert alert-warning alert-dismissible fade show" role="alert">
        <strong>@Model.Message</strong>
    </div>
}

@if (Model.Users is not null){

    <div class="row">
        <div class="col-md-12">
            @Html.Grid(Model.Users).Named("")
        </div>
    </div>
    @(
    Html
            .Grid(Model.Users)
            .Build(columns =>
            {
                columns.Add(model => model.Email).Titled("Usuario").Sortable(true).Filterable(GridFilterCase.Lower);
                    columns.Add(model => model.IsAdmin ? "<h2><i class='bi bi-check-circle-fill text-success'></i></h2>" : "<h2><i class='bi bi-x-circle-fill text-danger'></i></h2>").Width(30).Titled("Admin").Sortable(true).Css("text-center").Encoded(false);
                columns.Add().Encoded(false).Width(30).RenderedAs(o => Html.ActionLink("Editar", "EditRol", new  { o.Email }, new { @class = "btn btn-secondary" }));
                    columns.Add().Encoded(false).Width(30).RenderedAs(o => Html.ActionLink("Eliminar", "Delete", new { o.Email }, new { @class = "btn btn-secondary eliminar-usuario" }));
                })
        .Using(GridFilterMode.Header)
        .Empty("No data found")
        .Pageable(pager => { pager.RowsPerPage = 10; })
    )

}else{
    <p>No hay usuarios para mostrar</p>
}

@section Scripts {
    <partial name="_ValidationScriptsPartial" />

    <script>
        // Espera a que se cargue el documento
        document.addEventListener("DOMContentLoaded", function () {
            // Obtiene todos los elementos con la clase 'eliminar-usuario'
            var elementosEliminar = document.querySelectorAll('.eliminar-usuario');

            // Agrega un listener de clic a cada elemento
            elementosEliminar.forEach(function (elemento) {
                elemento.addEventListener('click', function (e) {
                    // Prevención de la acción predeterminada del enlace
                    e.preventDefault();

                    // Obtiene la URL de destino del enlace
                    var url = this.getAttribute('href');

                    // Muestra una ventana emergente de confirmación
                    if (confirm('¿Estás seguro de que deseas eliminar este usuario?')) {
                        // Si el usuario confirma, redirige a la URL de eliminación
                        window.location.href = url;
                    } else {
                        // Si el usuario cancela, no hacer nada
                        return false;
                    }
                });
            });
        });
    </script>

}